<#@ template tier="10" #>
<Biml xmlns="http://schemas.varigence.com/biml.xsd">
<Annotations>
<# foreach (var database in RootNode.Databases) { #>
<Annotation Tag="SQL_CreateDestination_<#=database.Name#>">

/* Set Destination Database */
USE [<#=database.Name#>];



/* Create Destination Schemas */
<# foreach (var schema in RootNode.Schemas.Where(s => s.Database == database)) { #>
DECLARE @query nvarchar(4000);
SET @query = 'CREATE SCHEMA [<#=schema.Name#>];';
IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = N'<#=schema.Name#>')
EXEC(@query);
GO
<# } #>



/* Create Destination Tables */
<# foreach (var table in RootNode.Tables.Where(t => t.Schema.Database == database)) { #>
<#=table.GetDropAndCreateDdl()#>
<# } #>



/* MERGE */
<# foreach (var table in RootNode.Tables.Where(t => t.Schema.Database == database).Where(t => t.GetTag("SupportTableType") == "Staging")) { #>
CREATE OR ALTER PROCEDURE <#=table.Schema#>.<#=table.GetTag("SourceSchemaName")#>_<#=table.GetTag("SourceTableName")#>_Merge
AS
BEGIN
    SET NOCOUNT ON;
	
	/* Soft Delete - Two Statements */
    MERGE <#=table.GetTag("CoreTableName")#> AS core
    USING (SELECT <#=table.GetColumnList(c => c.GetTag("ChangeType") != "Insert")#> FROM <#=table.Name#>) AS stg
    ON <#=table.GetColumnComparisonList(c => c.IsUsedInPrimaryKey == true, "core", "stg")#>
    WHEN MATCHED AND stg.ChangeType = 'U'
        THEN UPDATE SET
        <#=table.GetColumnAssignmentList(c => c.IsUsedInPrimaryKey == false && c.GetTag("ChangeType") != "Insert", "core", "stg")#>
	;
	
	UPDATE core
    SET <#=table.GetColumnAssignmentList(c => c.IsUsedInPrimaryKey == false && c.GetTag("ChangeType") == "Update", "core", "stg")#>
    FROM <#=table.GetTag("CoreTableName")#> AS core
    INNER JOIN <#=table.Schema#>.<#=table.Name#> AS stg 
    ON <#=table.GetColumnComparisonList(c => c.IsUsedInPrimaryKey == true, "core", "stg")#>
    ;
    
    /* Hard Delete - One Statement */
    /*
    MERGE <#=table.GetTag("CoreTableName")#> AS core
    USING (SELECT <#=table.GetColumnList(c => c.GetTag("ChangeType") != "Insert")#> FROM <#=table.Schema#>.<#=table.Name#>) AS stg
    ON <#=table.GetColumnComparisonList(c => c.IsUsedInPrimaryKey == true, "core", "stg")#>
    WHEN MATCHED AND stg.ChangeType = 'U'
        THEN UPDATE SET
        <#=table.GetColumnAssignmentList(c => c.IsUsedInPrimaryKey == false && c.GetTag("ChangeType") != "Insert", "core", "stg")#>
	WHEN MATCHED AND stg.ChangeType = 'D'
        THEN DELETE
    ;
    */
    
    RETURN 0;
END;
GO
<# } #>

</Annotation>
<# } #>
</Annotations>
</Biml>